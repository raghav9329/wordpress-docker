pipeline {
  agent any

  environment {
    AWS_REGION = 'us-east-1'
    ECS_CLUSTER = 'wordpress-cluster'
    ECS_SERVICE = 'wordpress-service'
    IMAGE_REPO_NAME = 'wordpress'
    IMAGE_TAG = 'latest'
    AWS_ACCOUNT_ID = '298901429832'
  }

  stages {
            stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/raghav9329/wordpress-docker.git']]])
            }
        }
    stage('Build Docker image') {
      steps {
        script {
             docker.build("${IMAGE_REPO_NAME}:${IMAGE_TAG}")
        }
      }
    }

    stage('Push Docker image to ECR') {
      steps {
        script {
            sh "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
            sh 'docker tag "${IMAGE_REPO_NAME}:${IMAGE_TAG}" "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"'
            sh 'docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"'
            //wordpress.push("${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}")
        }
      }
    }

    stage('Deploy to Fargate') {
      steps {
          sh 'aws s3 cp "appspec.yml" s3://wp-codedeploy-raghav/'
            sh   'aws deploy create-deployment \
    --application-name wp-codedeploy-app \
    --deployment-group-name wp-codedeploy-group \
    --description "Deployment $VERSION" \
    --s3-location bucket=wp-codedeploy-raghav,bundleType=YAML,key="appspec.yml"'
      }
    }
  }
}
